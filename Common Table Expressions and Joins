--SQL query with common table expressions and joins

WITH all_genres AS (				
SELECT h.country, 				
	SUM(a.amount) AS total_revenue,			
	j.name AS genre			
		FROM payment A		
				
	-- Joining payment to film			
				
		INNER JOIN rental B		
			ON a.rental_id = b.rental_id	
		INNER JOIN inventory C		
			ON b.inventory_id = c.inventory_id	
		INNER JOIN film D		
			ON c.film_id = d.film_id	
				
	-- Joining payment to country			
				
		INNER JOIN customer E		
			ON a.customer_id = e.customer_id	
		INNER JOIN address F		
			ON e.address_id = f.address_id	
		INNER JOIN city G 		
			ON f.city_id = g.city_id	
		INNER JOIN country H		
			ON g.country_id = h.country_id	
				
	--Joining film to category			
				
		INNER JOIN film_category I		
			ON c.film_id = i.film_id	
		INNER JOIN category J		
			ON i.category_id = j.category_id	
				
GROUP BY country, genre				
	ORDER BY total_revenue DESC),			
				
	--Add a row			
				
added_row AS (				
	SELECT *, 			
	ROW_NUMBER() OVER (PARTITION BY country ORDER BY total_revenue DESC) AS row_num			
		FROM all_genres),		
				
	--Use added row to isolate top genre			
				
top_genre AS(				
SELECT * 				
FROM added_row 				
	WHERE row_num = 1			
GROUP BY country, total_revenue, row_num, genre 				
ORDER BY total_revenue DESC)				
				
	--Form query			
				
SELECT a.country,				
	SUM (f.amount) AS total_global_revenue,			
	a.genre AS top_selling_genre			
		FROM top_genre A		
			INNER JOIN country B	
				ON a.country = b.country
			INNER JOIN city C	
				ON b.country_id = c.country_id
			INNER JOIN address D	
				ON c.city_id = d.city_id
			INNER JOIN customer E	
				ON d.address_id = e.address_id
			INNER JOIN payment F	
				ON e.customer_id = f.customer_id
GROUP BY a.country, genre				
ORDER BY total_global_revenue DESC;				
